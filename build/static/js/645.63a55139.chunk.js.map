{"version":3,"file":"static/js/645.63a55139.chunk.js","mappings":"+LAGA,MAAMA,EAAgB,CACpB,CAAEC,KAAM,eAAMC,KAAM,uEACpB,CAAED,KAAM,eAAMC,KAAM,oFACpB,CAAED,KAAM,eAAMC,KAAM,mEACpB,CAAED,KAAM,eAAMC,KAAM,sFA2EtB,2BAxEuBC,KACrB,MAAMC,EAAeC,aAAaC,QAAQ,oBACnCC,EAAQC,IAAaC,EAAAA,EAAAA,UAA0B,UAAjBL,IAC9BM,EAASC,IAAcF,EAAAA,EAAAA,WAAS,GAgBvC,OAbAG,EAAAA,EAAAA,YAAU,KACRP,aAAaQ,QAAQ,kBAAmBN,EAAO,GAC9C,CAACA,KAGJK,EAAAA,EAAAA,YAAU,KACR,GAAIL,EAAQ,CACVI,GAAW,GACX,MAAMG,EAAQC,YAAW,IAAMJ,GAAW,IAAQ,KAClD,MAAO,IAAMK,aAAaF,EAC5B,IACC,CAACP,KAGFU,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sKAAqKC,SAAA,EAClLF,EAAAA,EAAAA,MAAA,OACEG,QAASA,IAAMZ,GAAUa,IAAcA,IACvCH,UAAU,wDAAuDC,SAAA,EAEjEG,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,yDAAwDC,SAAC,kCAGtEZ,GACCe,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CAACL,UAAU,2BAEvBI,EAAAA,EAAAA,KAACE,EAAAA,EAAY,CAACN,UAAU,8BAI5BI,EAAAA,EAAAA,KAAA,OACEJ,UAAW,4DACTX,EAAS,6BAA+B,qBACvCY,SAEFT,GACCO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBC,SAAA,EACtCG,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,oDACfI,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,oDACfI,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,oDACfI,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,uDAGjBD,EAAAA,EAAAA,MAAAQ,EAAAA,SAAA,CAAAN,SAAA,EACEG,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,wCAAuCC,SAAC,gEAIrDG,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,YAAWC,SACtBnB,EAAc0B,KAAI,CAACC,EAASC,KAC3BX,EAAAA,EAAAA,MAAA,MAAgBC,UAAU,0DAAyDC,SAAA,EACjFG,EAAAA,EAAAA,KAAA,QAAMJ,UAAU,WAAUC,SAAEQ,EAAQ1B,QACpCqB,EAAAA,EAAAA,KAAA,QAAMJ,UAAU,uBAAsBC,SAAEQ,EAAQzB,SAFzC0B,QAObN,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,gDAA+CC,SAAC,uEAMjE,C","sources":["components/NarrativePanel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ChevronDown, ChevronRight } from 'lucide-react';\r\n\r\nconst dummyInsights = [\r\n  { icon: \"💡\", text: \"You’ve improved your risk tolerance by 20% over the past week.\" },\r\n  { icon: \"📈\", text: \"Scenarios involving supply chains have a higher success rate (78%) than average.\" },\r\n  { icon: \"🧠\", text: \"Your average decision confidence has increased from 72% to 84%.\" },\r\n  { icon: \"⚖️\", text: \"You’ve simulated more balanced trade-offs in financial scenarios this month.\" },\r\n];\r\n\r\nconst NarrativePanel = () => {\r\n  const storedIsOpen = localStorage.getItem('narrativeIsOpen');\r\n  const [isOpen, setIsOpen] = useState(storedIsOpen !== 'false');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Save toggle state in localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem('narrativeIsOpen', isOpen);\r\n  }, [isOpen]);\r\n\r\n  // Trigger loading every time it opens\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      setLoading(true);\r\n      const timer = setTimeout(() => setLoading(false), 3000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <div className=\"w-full  hover:shadow-blue-500/50 transition px-6 py-6 border p-6 mt-8 bg-white dark:bg-gray-800 rounded-3xl shadow-lg transition-all mb-12 duration-300 ease-in-out\">\r\n      <div\r\n        onClick={() => setIsOpen(prevState => !prevState)}\r\n        className=\"flex items-center justify-between cursor-pointer mb-4\"\r\n      >\r\n        <h2 className=\"text-xl font-semibold text-blue-600 dark:text-blue-300\">\r\n          Narrative Insights from Omnis\r\n        </h2>\r\n        {isOpen ? (\r\n          <ChevronDown className=\"w-5 h-5 text-blue-500\" />\r\n        ) : (\r\n          <ChevronRight className=\"w-5 h-5 text-blue-500\" />\r\n        )}\r\n      </div>\r\n\r\n      <div\r\n        className={`transition-all duration-300 ease-in-out overflow-hidden ${\r\n          isOpen ? 'max-h-[1200px] opacity-100' : 'max-h-0 opacity-0'\r\n        }`}\r\n      >\r\n        {loading ? (\r\n          <div className=\"animate-pulse space-y-4\">\r\n            <div className=\"h-4 w-3/4 bg-gray-300 dark:bg-gray-700 rounded\" />\r\n            <div className=\"h-4 w-4/5 bg-gray-300 dark:bg-gray-700 rounded\" />\r\n            <div className=\"h-4 w-2/3 bg-gray-300 dark:bg-gray-700 rounded\" />\r\n            <div className=\"h-4 w-1/2 bg-gray-300 dark:bg-gray-700 rounded\" />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <p className=\"text-gray-600 dark:text-gray-300 mb-4\">\r\n              Here’s what I’ve learned about your decisions...\r\n            </p>\r\n\r\n            <ul className=\"space-y-4\">\r\n              {dummyInsights.map((insight, index) => (\r\n                <li key={index} className=\"flex items-start gap-3 text-gray-700 dark:text-gray-100\">\r\n                  <span className=\"text-2xl\">{insight.icon}</span>\r\n                  <span className=\"text-sm sm:text-base\">{insight.text}</span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"mt-6 text-xs text-gray-400 dark:text-gray-500\">\r\n              *Omnis AI-generated summaries based on your usage patterns.\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NarrativePanel;\r\n"],"names":["dummyInsights","icon","text","NarrativePanel","storedIsOpen","localStorage","getItem","isOpen","setIsOpen","useState","loading","setLoading","useEffect","setItem","timer","setTimeout","clearTimeout","_jsxs","className","children","onClick","prevState","_jsx","ChevronDown","ChevronRight","_Fragment","map","insight","index"],"sourceRoot":""}