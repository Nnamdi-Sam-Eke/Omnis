{"version":3,"file":"static/js/147.aab38666.chunk.js","mappings":"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","sources":["components/AnalyticsCard.js","../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  BarElement,\r\n  CategoryScale,\r\n  LineElement,\r\n  LinearScale,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Bar, Line } from 'react-chartjs-2';\r\nimport {\r\n  getFirestore,\r\n  collection,\r\n  getDocs,\r\n  addDoc,\r\n  doc,\r\n  getDoc,\r\n  updateDoc,\r\n  serverTimestamp,\r\n  query,\r\n  orderBy,\r\n} from 'firebase/firestore';\r\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\r\nimport { ChevronRight, ChevronDown } from 'lucide-react';\r\n\r\nChartJS.register(BarElement, CategoryScale, LineElement, LinearScale, Tooltip, Legend);\r\n\r\nconst UptimeChart = () => {\r\n  const [sessions, setSessions] = useState([]);\r\n  const [filteredSessions, setFilteredSessions] = useState([]);\r\n  const [totalNetworkTime, setTotalNetworkTime] = useState({ hours: 0, minutes: 0 });\r\n  const [todayTime, setTodayTime] = useState({ hours: 0, minutes: 0 });\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [isOpen, setIsOpen] = useState(false);            // collapsed by default\r\n  const [view, setView] = useState('session');            // 'session' or 'day'\r\n  const [chartType, setChartType] = useState('bar');      // 'bar' or 'line'\r\n  const [loading, setLoading] = useState(false);          // loader for charts & stats\r\n\r\n  const db = getFirestore();\r\n  const auth = getAuth();\r\n\r\n  // start real-time tracking...\r\n  useEffect(() => {\r\n    let intervalId, sessionId;\r\n    const startRealTimeTracking = async (user) => {\r\n      const sessionRef = await addDoc(collection(db, 'users', user.uid, 'sessions'), {\r\n        start: serverTimestamp(),\r\n        duration: 0,\r\n        active: true,\r\n      });\r\n      sessionId = sessionRef.id;\r\n      const sessionDocRef = doc(db, 'users', user.uid, 'sessions', sessionId);\r\n      intervalId = setInterval(async () => {\r\n        const snap = await getDoc(sessionDocRef);\r\n        if (snap.exists()) {\r\n          const current = snap.data().duration || 0;\r\n          await updateDoc(sessionDocRef, {\r\n            duration: current + 60,\r\n            lastUpdated: serverTimestamp(),\r\n          });\r\n        }\r\n      }, 60000);\r\n    };\r\n    const handleExit = async () => {\r\n      clearInterval(intervalId);\r\n      const user = auth.currentUser;\r\n      if (user && sessionId) {\r\n        const sessionDocRef = doc(db, 'users', user.uid, 'sessions', sessionId);\r\n        await updateDoc(sessionDocRef, { active: false });\r\n      }\r\n    };\r\n    onAuthStateChanged(auth, (user) => { if (user) startRealTimeTracking(user); });\r\n    window.addEventListener('beforeunload', handleExit);\r\n    return () => {\r\n      clearInterval(intervalId);\r\n      window.removeEventListener('beforeunload', handleExit);\r\n    };\r\n  }, []);\r\n\r\n  // fetch sessions...\r\n  useEffect(() => {\r\n    const fetchSessions = async () => {\r\n      const usersSnap = await getDocs(collection(db, 'users'));\r\n      let all = [];\r\n      for (const u of usersSnap.docs) {\r\n        const uid = u.id;\r\n        const sq = query(collection(db, 'users', uid, 'sessions'), orderBy('start','asc'));\r\n        const snaps = await getDocs(sq);\r\n        snaps.forEach(s => all.push({ ...s.data(), userId: uid }));\r\n      }\r\n      setSessions(all);\r\n    };\r\n    fetchSessions();\r\n  }, []);\r\n\r\n  // recalc times when data or date filters change\r\n  useEffect(() => {\r\n    const calc = () => {\r\n      let tot=0, today=0;\r\n      const now=new Date(), midnight=new Date(); midnight.setHours(0,0,0,0);\r\n      const sDate = startDate ? new Date(startDate) : null;\r\n      const eDate = endDate   ? new Date(endDate  ) : null;\r\n      const filt = sessions.filter(s => {\r\n        if (!s.start) return false;\r\n        const st = s.start.toDate ? s.start.toDate() : new Date(s.start.seconds*1e3);\r\n        const dur = s.duration||0;\r\n        return dur>0 && (!sDate||st>=sDate) && (!eDate||st<=eDate);\r\n      });\r\n      filt.forEach(s => {\r\n        const st = s.start.toDate ? s.start.toDate() : new Date(s.start.seconds*1e3);\r\n        const dur = s.duration||0;\r\n        tot += dur;\r\n        const endT = new Date(st.getTime()+dur*1e3);\r\n        const os = st<midnight?midnight:st, oe = endT>now?now:endT;\r\n        if (oe>os) today += Math.floor((oe-os)/1e3);\r\n      });\r\n      setFilteredSessions(filt);\r\n      setTotalNetworkTime({ hours: Math.floor(tot/3600), minutes: Math.floor((tot%3600)/60) });\r\n      setTodayTime({ hours: Math.floor(today/3600), minutes: Math.floor((today%3600)/60) });\r\n    };\r\n    calc();\r\n  }, [sessions, startDate, endDate]);\r\n\r\n  // whenever panel opens, show loader briefly\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      setLoading(true);\r\n      const t = setTimeout(() => setLoading(false), 3000);\r\n      return () => clearTimeout(t);\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const getData = () => {\r\n    const ds = view==='session'\r\n      ? filteredSessions.map(s=> (s.duration||0)/3600)\r\n      : Object.values(filteredSessions.reduce((acc,s)=>{\r\n          const d=(s.start.toDate? s.start.toDate():new Date(s.start.seconds*1e3)).toDateString();\r\n          acc[d]=(acc[d]||0)+(s.duration||0); return acc;\r\n        },{})).map(sec=>sec/3600);\r\n    const labels = view==='session'\r\n      ? filteredSessions.map((_,i)=>`Session ${i+1}`)\r\n      : Object.keys(filteredSessions.reduce((acc,s)=>{\r\n          const d=(s.start.toDate? s.start.toDate():new Date(s.start.seconds*1e3)).toDateString();\r\n          acc[d]=(acc[d]||0)+(s.duration||0); return acc;\r\n        },{}));\r\n    return {\r\n      labels,\r\n      datasets:[{\r\n        label: view==='session'?'Session Duration (hrs)':'Day Duration (hrs)',\r\n        data: ds,\r\n        backgroundColor: chartType==='bar'? '#FF7F50':'transparent',\r\n        borderColor: chartType==='line'? '#DC2626':'transparent',\r\n        fill: chartType==='line',\r\n        tension: chartType==='line'?0.4:0,\r\n        borderWidth: chartType==='line'?2:0,\r\n        pointBackgroundColor: chartType==='line'? '#DC2626':'transparent'\r\n      }]\r\n    };\r\n  };\r\n\r\n  const options = {\r\n    responsive:true, maintainAspectRatio:false,\r\n    plugins:{ legend:{ position:'top', labels:{color:'#555'} } },\r\n    scales:{ x:{ ticks:{color:'#888'}, grid:{display:false} },\r\n             y:{ ticks:{color:'#888'}, grid:{color:'#e5e7eb'}, beginAtZero:true } }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 p-6 mt-8 rounded-3xl shadow border w-full transition-all duration-300 ease-in-out\">\r\n      <button\r\n        className=\"w-full text-left mb-4 text-blue-500 dark:text-blue-300 flex justify-between items-center\"\r\n        onClick={()=>setIsOpen(o=>!o)}\r\n      >\r\n        <span className=\"text-lg font-semibold\">Uptime Analytics</span>\r\n        {isOpen? <ChevronDown/> : <ChevronRight/>}\r\n      </button>\r\n\r\n      <div className={`transition-all duration-300 ease-in-out overflow-hidden ${isOpen?'max-h-[800px] opacity-100':'max-h-0 opacity-0'}`}>\r\n        {/* controls */}\r\n        <div className=\"flex flex-wrap gap-4 mb-4\">\r\n          {['session','day'].map(v=>(\r\n            <button key={v}\r\n              onClick={()=>setView(v)}\r\n              className={`px-4 py-2 rounded-md ${view===v?'bg-blue-500 text-white':'bg-gray-200'}`}\r\n            >{v==='session'?'Session':'Day'} View</button>\r\n          ))}\r\n          {['bar','line'].map(t=>(\r\n            <button key={t}\r\n              onClick={()=>setChartType(t)}\r\n              className={`px-4 py-2 rounded-md text-sm ${chartType===t?'bg-green-500 text-white':'bg-gray-200'}`}\r\n            >{t==='bar'?'Bar':'Line'} Chart</button>\r\n          ))}\r\n        </div>\r\n\r\n        {/* chart or loader */}\r\n        <div className=\"flex-1 min-h-[300px] mb-6\">\r\n          {loading\r\n            ? <div className=\"w-full h-[260px] bg-gray-200 dark:bg-gray-700 animate-pulse rounded\" />\r\n            : chartType==='bar'\r\n              ? <Bar data={getData()} options={options}/>\r\n              : <Line data={getData()} options={options}/>\r\n          }\r\n        </div>\r\n\r\n        {/* stats or loader */}\r\n        <div className=\"flex flex-col lg:flex-row gap-6\">\r\n          {[{label:'Total Network Time',val:totalNetworkTime},\r\n            {label:'Today’s Time', val:todayTime}].map(({label,val},i)=>(\r\n            <div key={i} className=\"bg-gray-200 dark:bg-gray-700 p-4 rounded-md shadow flex-1 transition-all duration-300\">\r\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">{label}</p>\r\n              {loading\r\n                ? <div className=\"w-2/3 h-6 bg-gray-300 dark:bg-gray-600 rounded animate-pulse mt-2\"/>\r\n                : <p className=\"text-2xl font-mono text-black dark:text-white mt-2\">\r\n                    {val.hours}h {val.minutes}m\r\n                  </p>\r\n              }\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UptimeChart;\r\n","import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS<TType, TData, TLabel> | null>(null);\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n"],"names":["ChartJS","register","BarElement","CategoryScale","LineElement","LinearScale","Tooltip","Legend","UptimeChart","sessions","setSessions","useState","filteredSessions","setFilteredSessions","totalNetworkTime","setTotalNetworkTime","hours","minutes","todayTime","setTodayTime","startDate","setStartDate","endDate","setEndDate","isOpen","setIsOpen","view","setView","chartType","setChartType","loading","setLoading","db","getFirestore","auth","getAuth","useEffect","intervalId","sessionId","handleExit","async","clearInterval","user","currentUser","sessionDocRef","doc","uid","updateDoc","active","onAuthStateChanged","sessionRef","addDoc","collection","start","serverTimestamp","duration","id","setInterval","snap","getDoc","exists","current","data","lastUpdated","startRealTimeTracking","window","addEventListener","removeEventListener","usersSnap","getDocs","all","u","docs","sq","query","orderBy","forEach","s","push","userId","fetchSessions","calc","tot","today","now","Date","midnight","setHours","sDate","eDate","filt","filter","st","toDate","seconds","dur","endT","getTime","os","oe","Math","floor","t","setTimeout","clearTimeout","getData","ds","map","Object","values","reduce","acc","d","toDateString","sec","labels","_","i","keys","datasets","label","backgroundColor","borderColor","fill","tension","borderWidth","pointBackgroundColor","options","responsive","maintainAspectRatio","plugins","legend","position","color","scales","x","ticks","grid","display","y","beginAtZero","_jsxs","className","children","onClick","o","_jsx","ChevronDown","ChevronRight","v","Bar","Line","val","_ref","defaultDatasetIdKey","reforwardRef","ref","value","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","arguments","length","addedDatasets","nextDataset","currentDataset","find","dataset","includes","assign","cloneData","nextData","getDatasetAtEvent","chart","event","getElementsAtEventForMode","nativeEvent","intersect","getElementAtEvent","getElementsAtEvent","ChartComponent","props","height","width","redraw","type","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","Chart$1","destroyChart","destroy","nextOptions","setOptions","config","update","React","role","Chart","forwardRef","createTypedChart","registerables","LineController","BarController","Radar","RadarController","Doughnut","DoughnutController","PolarArea","PolarAreaController","Bubble","BubbleController","Pie","PieController","Scatter","ScatterController"],"sourceRoot":""}