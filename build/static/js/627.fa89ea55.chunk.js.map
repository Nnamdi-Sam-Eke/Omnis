{"version":3,"file":"static/js/627.fa89ea55.chunk.js","mappings":"wMASA,MAAMA,GAAgBC,EAAAA,EAAAA,OAAK,IACzB,6BAA0BC,MAAKC,IAAG,CAAOC,QAASD,EAAIE,eAGxDC,EAAAA,GAAQC,SAASC,EAAAA,GAAYC,EAAAA,GAASC,EAAAA,IAEtC,MAAMC,EAAY,CAChBC,OAAQ,CAAC,UAAW,YAAa,SAAU,SAAU,SAAU,eAC/DC,SAAU,CACR,CACEC,MAAO,iBACPC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAC3BC,gBAAiB,CACf,UACA,UACA,UACA,UACA,UACA,WAEFC,YAAa,KAKbC,EAAe,CACnBC,YAAY,EACZC,QAAS,CACPC,OAAQ,CACNC,SAAU,QACVV,OAAQ,CACNW,MAAO,UACPC,KAAM,CAAEC,KAAM,MAGlBC,QAAS,CACPC,UAAW,CACTb,MAAO,SAAUc,GAGf,MAAO,GAFOjB,EAAUC,OAAOgB,EAAQC,YAAc,OACvClB,EAAUE,SAAS,GAAGE,KAAKa,EAAQC,YAAc,aAEjE,MAMO,SAASC,4BACtB,MAAMC,EAAeC,aAAaC,QAAQ,wBACnCC,EAAQC,IAAaC,EAAAA,EAAAA,UACT,UAAjBL,IAIKM,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,GAe3C,OAZAG,EAAAA,EAAAA,YAAU,KACR,GAAIL,EAAQ,CACVI,GAAa,GACb,MAAME,EAAIC,YAAW,IAAMH,GAAa,IAAQ,KAChD,MAAO,IAAMI,aAAaF,EAC5B,IACC,CAACN,KAEJK,EAAAA,EAAAA,YAAU,KACRP,aAAaW,QAAQ,sBAAuBT,EAAO,GAClD,CAACA,KAGFU,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oJAAmJC,SAAA,EAChKF,EAAAA,EAAAA,MAAA,OACEG,QAASA,IAAMZ,GAAWD,GAC1BW,UAAU,wDAAuDC,SAAA,EAEjEE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,yDAAwDC,SAAC,gDAGtEZ,GACCc,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CAACJ,UAAU,2BAEvBG,EAAAA,EAAAA,KAACE,EAAAA,EAAY,CAACL,UAAU,8BAI5BG,EAAAA,EAAAA,KAAA,OACEH,UAAW,4DACTX,EAAS,4BAA8B,qBACtCY,UAEHE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,oEAAmEC,SAC/ET,GACCW,EAAAA,EAAAA,KAAA,OAAKH,UAAU,yEAEfG,EAAAA,EAAAA,KAACG,EAAAA,SAAQ,CAACC,UAAUJ,EAAAA,EAAAA,KAAA,OAAKH,UAAU,uDAAwDC,UACzFE,EAAAA,EAAAA,KAAChD,EAAa,CAACe,KAAMJ,EAAW0C,QAASnC,YAOvD,C","sources":["components/CategoryDistributionChart.js"],"sourcesContent":["import React, { useState, useEffect, lazy, Suspense } from 'react';\r\nimport { ChevronDown, ChevronRight } from 'lucide-react';\r\nimport {\r\n  Chart as ChartJS,\r\n  ArcElement,\r\n  Tooltip,\r\n  Legend\r\n} from 'chart.js';\r\n\r\nconst DoughnutChart = lazy(() =>\r\n  import('react-chartjs-2').then(mod => ({ default: mod.Doughnut }))\r\n);\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst chartData = {\r\n  labels: ['Finance', 'Logistics', 'Health', 'Energy', 'Retail', 'Agriculture'],\r\n  datasets: [\r\n    {\r\n      label: 'Scenario Count',\r\n      data: [25, 15, 20, 10, 12, 18],\r\n      backgroundColor: [\r\n        '#3b82f6',\r\n        '#10b981',\r\n        '#f59e0b',\r\n        '#ef4444',\r\n        '#8b5cf6',\r\n        '#14b8a6',\r\n      ],\r\n      borderWidth: 1,\r\n    },\r\n  ],\r\n};\r\n\r\nconst chartOptions = {\r\n  responsive: true,\r\n  plugins: {\r\n    legend: {\r\n      position: 'right',\r\n      labels: {\r\n        color: '#6b7280',\r\n        font: { size: 12 },\r\n      },\r\n    },\r\n    tooltip: {\r\n      callbacks: {\r\n        label: function (context) {\r\n          const label = chartData.labels[context.dataIndex] || '';\r\n          const value = chartData.datasets[0].data[context.dataIndex] || 0;\r\n          return `${label}: ${value} scenarios`;\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport default function CategoryDistributionChart() {\r\n  const storedIsOpen = localStorage.getItem('categoryChartIsOpen');\r\n  const [isOpen, setIsOpen] = useState(\r\n    storedIsOpen === 'false' ? false : true\r\n  );\r\n\r\n  // skeleton loader flag\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // when expanded/collapsed, trigger loading\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      setIsLoading(true);\r\n      const t = setTimeout(() => setIsLoading(false), 3000);\r\n      return () => clearTimeout(t);\r\n    }\r\n  }, [isOpen]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('categoryChartIsOpen', isOpen);\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <div className=\"w-full border bg-white mt-6 dark:bg-gray-800 p-6  hover:shadow-blue-500/50 transition px-6 py-6 rounded-3xl shadow-lg transition-all duration-300\">\r\n      <div\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        className=\"flex items-center justify-between cursor-pointer mb-4\"\r\n      >\r\n        <h2 className=\"text-xl font-semibold text-blue-500 dark:text-blue-300\">\r\n          üåç Scenario Category Distribution\r\n        </h2>\r\n        {isOpen ? (\r\n          <ChevronDown className=\"w-5 h-5 text-blue-500\" />\r\n        ) : (\r\n          <ChevronRight className=\"w-5 h-5 text-blue-500\" />\r\n        )}\r\n      </div>\r\n\r\n      <div\r\n        className={`transition-all duration-300 ease-in-out overflow-hidden ${\r\n          isOpen ? 'max-h-[600px] opacity-100' : 'max-h-0 opacity-0'\r\n        }`}\r\n      >\r\n        <div className=\"h-96 flex items-center justify-center transition-all duration-300\">\r\n          {isLoading ? (\r\n            <div className=\"w-full h-full bg-gray-200 dark:bg-gray-700 animate-pulse rounded-md\" />\r\n          ) : (\r\n            <Suspense fallback={<div className=\"w-full h-full bg-gray-200 animate-pulse rounded-md\" />}>\r\n              <DoughnutChart data={chartData} options={chartOptions} />\r\n            </Suspense>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["DoughnutChart","lazy","then","mod","default","Doughnut","ChartJS","register","ArcElement","Tooltip","Legend","chartData","labels","datasets","label","data","backgroundColor","borderWidth","chartOptions","responsive","plugins","legend","position","color","font","size","tooltip","callbacks","context","dataIndex","CategoryDistributionChart","storedIsOpen","localStorage","getItem","isOpen","setIsOpen","useState","isLoading","setIsLoading","useEffect","t","setTimeout","clearTimeout","setItem","_jsxs","className","children","onClick","_jsx","ChevronDown","ChevronRight","Suspense","fallback","options"],"sourceRoot":""}