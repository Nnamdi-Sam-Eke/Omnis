{"version":3,"file":"static/js/662.e329caf6.chunk.js","mappings":"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","sources":["components/AnalyticsOverview.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { db } from '../firebase';\r\nimport { collection, query, where, getDocs } from 'firebase/firestore';\r\nimport { Chart, registerables } from 'chart.js';\r\nimport 'chartjs-adapter-date-fns';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { motion } from 'framer-motion';\r\n\r\nChart.register(...registerables);\r\n\r\nconst KpiCard = ({ title, value, icon }) => (\r\n  <motion.div\r\n    className=\"bg-white dark:bg-gray-900 p-6 rounded-2xl shadow-lg flex flex-col items-center text-center hover:shadow-2xl transition-shadow\"\r\n    initial={{ opacity: 0, y: 30 }}\r\n    animate={{ opacity: 1, y: 0 }}\r\n    transition={{ duration: 0.5 }}\r\n  >\r\n    {icon && <div className=\"text-4xl mb-2 text-blue-500\">{icon}</div>}\r\n    <h4 className=\"text-lg font-semibold text-gray-700 dark:text-gray-300\">{title}</h4>\r\n    <p className=\"text-3xl font-bold text-green-500 mt-2\">{value}</p>\r\n  </motion.div>\r\n);\r\n\r\nexport default function AnalyticsOverview() {\r\n  const [totalSessions, setTotalSessions] = useState(0);\r\n  const [totalScenarios, setTotalScenarios] = useState(0);\r\n  const [dailyUptime, setDailyUptime] = useState(0);\r\n  const [uptimeHistory, setUptimeHistory] = useState([]);\r\n  const [sessionActive, setSessionActive] = useState(false);\r\n\r\n  const todayKey = new Date().toISOString().split('T')[0];\r\n\r\n  const formatUptime = (ms) => {\r\n    const mins = Math.floor(ms / 60000);\r\n    const h = String(Math.floor(mins / 60)).padStart(2, '0');\r\n    const m = String(mins % 60).padStart(2, '0');\r\n    return `${h}h ${m}m`;\r\n  };\r\n\r\n  // Start session logic\r\n  const startSession = () => {\r\n    if (!sessionActive) {\r\n      const now = Date.now();\r\n      localStorage.setItem('sessionStart', now);\r\n      localStorage.setItem('sessionActive', 'true');\r\n      setSessionActive(true);\r\n    }\r\n  };\r\n\r\n  // End session logic\r\n  const endSession = () => {\r\n    const startTs = parseInt(localStorage.getItem('sessionStart'), 10);\r\n    if (startTs) {\r\n      const elapsed = Date.now() - startTs;\r\n      const prev = parseInt(localStorage.getItem(`dailyUptime_${todayKey}`), 10) || 0;\r\n      const total = prev + elapsed;\r\n      localStorage.setItem(`dailyUptime_${todayKey}`, total);\r\n      setDailyUptime(total);\r\n    }\r\n    localStorage.removeItem('sessionStart');\r\n    localStorage.setItem('sessionActive', 'false');\r\n    setSessionActive(false);\r\n  };\r\n\r\n  // Mount: restore session and uptime\r\n  useEffect(() => {\r\n    const active = localStorage.getItem('sessionActive') === 'true';\r\n    setSessionActive(active);\r\n    const storedUptime = parseInt(localStorage.getItem(`dailyUptime_${todayKey}`), 10) || 0;\r\n    setDailyUptime(storedUptime);\r\n    if (!active) startSession();\r\n\r\n    window.addEventListener('beforeunload', endSession);\r\n    return () => {\r\n      endSession();\r\n      window.removeEventListener('beforeunload', endSession);\r\n    };\r\n  }, []);\r\n\r\n  // Tick every minute to update uptime\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (sessionActive) {\r\n        const startTs = parseInt(localStorage.getItem('sessionStart'), 10);\r\n        if (startTs) {\r\n          const elapsed = Date.now() - startTs;\r\n          const prev = parseInt(localStorage.getItem(`dailyUptime_${todayKey}`), 10) || 0;\r\n          const total = prev + elapsed;\r\n          setDailyUptime(total);\r\n          setUptimeHistory((prevHist) => [\r\n            ...prevHist,\r\n            { time: new Date().toLocaleTimeString(), uptime: Math.floor(total / 60000) },\r\n          ]);\r\n          localStorage.setItem(`dailyUptime_${todayKey}`, total);\r\n        }\r\n      }\r\n    }, 60000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [sessionActive]);\r\n\r\n  // Load total sessions (for demo, using localStorage)\r\n  useEffect(() => {\r\n    const sessions = parseInt(localStorage.getItem('sessionCount') || '0', 10);\r\n    setTotalSessions(sessions);\r\n  }, []);\r\n\r\n  // Fetch today's scenarios from Firestore\r\n  useEffect(() => {\r\n    const fetchScenarios = async () => {\r\n      const startOfDay = new Date();\r\n      startOfDay.setHours(0, 0, 0, 0);\r\n      const endOfDay = new Date();\r\n      endOfDay.setHours(23, 59, 59, 999);\r\n\r\n      const q = query(\r\n        collection(db, 'scenarios'),\r\n        where('date', '>=', startOfDay),\r\n        where('date', '<=', endOfDay)\r\n      );\r\n      const snapshot = await getDocs(q);\r\n      setTotalScenarios(snapshot.size);\r\n    };\r\n\r\n    fetchScenarios();\r\n  }, []);\r\n\r\n  const chartData = {\r\n    labels: uptimeHistory.map((e) => e.time),\r\n    datasets: [\r\n      {\r\n        label: 'Uptime (minutes)',\r\n        data: uptimeHistory.map((e) => e.uptime),\r\n        borderColor: '#3b82f6',\r\n        backgroundColor: 'rgba(59, 130, 246, 0.2)',\r\n        tension: 0.4,\r\n        pointRadius: 3,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: { display: false },\r\n      tooltip: { mode: 'index', intersect: false },\r\n    },\r\n    scales: {\r\n      x: { title: { display: true, text: 'Time' } },\r\n      y: { beginAtZero: true, title: { display: true, text: 'Minutes' } },\r\n    },\r\n    animation: { duration: 800 },\r\n  };\r\n\r\n  return (\r\n    <div className=\"analytics-overview p-6 bg-gray-50 dark:bg-gray-800 min-h-screen\">\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 mb-10\">\r\n        <KpiCard title=\"Total Sessions Today\" value={totalSessions} icon={<i className=\"fas fa-history\" />} />\r\n        <KpiCard title=\"Scenarios Run Today\" value={totalScenarios} icon={<i className=\"fas fa-tasks\" />} />\r\n        <KpiCard title=\"Daily Uptime\" value={formatUptime(dailyUptime)} icon={<i className=\"fas fa-clock\" />} />\r\n      </div>\r\n\r\n      <motion.div\r\n        className=\"bg-white dark:bg-gray-900 p-4 rounded-xl shadow-lg\"\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        transition={{ duration: 0.7 }}\r\n      >\r\n        <h3 className=\"text-lg font-semibold mb-4 text-gray-700 dark:text-gray-300\">Uptime Trend</h3>\r\n        <Line data={chartData} options={chartOptions} />\r\n      </motion.div>\r\n\r\n      <div className=\"mt-8 flex justify-center\">\r\n        <button\r\n          onClick={endSession}\r\n          className=\"px-5 py-3 bg-red-500 text-white rounded-full shadow hover:bg-red-600 transition transform hover:scale-105\"\r\n        >\r\n          End Session\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Chart","register","registerables","KpiCard","_ref","title","value","icon","_jsxs","motion","div","className","initial","opacity","y","animate","transition","duration","children","_jsx","AnalyticsOverview","totalSessions","setTotalSessions","useState","totalScenarios","setTotalScenarios","dailyUptime","setDailyUptime","uptimeHistory","setUptimeHistory","sessionActive","setSessionActive","todayKey","Date","toISOString","split","endSession","startTs","parseInt","localStorage","getItem","elapsed","now","total","setItem","removeItem","useEffect","active","storedUptime","startSession","window","addEventListener","removeEventListener","interval","setInterval","prevHist","time","toLocaleTimeString","uptime","Math","floor","clearInterval","sessions","async","startOfDay","setHours","endOfDay","q","query","collection","db","where","snapshot","getDocs","size","fetchScenarios","chartData","labels","map","e","datasets","label","data","borderColor","backgroundColor","tension","pointRadius","ms","mins","String","padStart","formatUptime","Line","options","responsive","plugins","legend","display","tooltip","mode","intersect","scales","x","text","beginAtZero","animation","onClick"],"sourceRoot":""}