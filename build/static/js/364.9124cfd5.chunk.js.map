{"version":3,"file":"static/js/364.9124cfd5.chunk.js","mappings":"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","sources":["components/ScenarioAccuracyChart.js","../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx"],"sourcesContent":["import React, { useState, useEffect, Suspense } from 'react';\r\nimport { ChevronDown, ChevronRight } from 'lucide-react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Filler,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Filler,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst allLabels = [\r\n  \"Mar 25\", \"Mar 26\", \"Mar 27\", \"Mar 28\", \"Mar 29\",\r\n  \"Mar 30\", \"Mar 31\", \"Apr 1\",  \"Apr 2\",  \"Apr 3\",\r\n  \"Apr 4\",  \"Apr 5\",  \"Apr 6\",  \"Apr 7\",  \"Apr 8\"\r\n];\r\nconst allAccuracy = [72, 75, 74, 76, 78, 80, 77, 79, 82, 85, 86, 88, 89, 91, 93];\r\n\r\nexport default function ScenarioAccuracyChart() {\r\n  const [range, setRange] = useState(7);\r\n  const storedIsOpen = localStorage.getItem('isOpen');\r\n  const [isOpen, setIsOpen] = useState(storedIsOpen === 'false' ? false : true);\r\n\r\n  // skeleton loading flag\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // whenever card expands or range changes, show skeleton then chart\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      setIsLoading(true);\r\n      const t = setTimeout(() => setIsLoading(false), 3000);\r\n      return () => clearTimeout(t);\r\n    }\r\n  }, [isOpen, range]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('isOpen', isOpen);\r\n  }, [isOpen]);\r\n\r\n  const labels = range === \"all\" ? allLabels : allLabels.slice(-range);\r\n  const dataPoints = range === \"all\" ? allAccuracy : allAccuracy.slice(-range);\r\n\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: \"Scenario Accuracy (%)\",\r\n        data: dataPoints,\r\n        fill: true,\r\n        backgroundColor: \"rgba(59, 130, 246, 0.2)\",\r\n        borderColor: \"#3b82f6\",\r\n        pointBackgroundColor: \"#3b82f6\",\r\n        tension: 0.4,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: \"top\",\r\n        labels: { color: \"#6b7280\", font: { size: 12 } },\r\n      },\r\n      tooltip: { mode: \"index\", intersect: false },\r\n    },\r\n    scales: {\r\n      x: {\r\n        ticks: { color: \"#6b7280\", autoSkip: false },\r\n        title: { display: true, text: \"Date\", color: \"#374151\", font: { weight: \"bold\" } },\r\n      },\r\n      y: {\r\n        beginAtZero: true,\r\n        max: 100,\r\n        ticks: { color: \"#6b7280\" },\r\n        title: { display: true, text: \"Accuracy (%)\", color: \"#374151\", font: { weight: \"bold\" } },\r\n      },\r\n    },\r\n  };\r\n\r\n  const pointWidth = 60;\r\n  const minWidth = labels.length * pointWidth;\r\n\r\n  return (\r\n    <div className=\"w-full border mt-8 bg-white dark:bg-gray-800 w-full  hover:shadow-blue-500/50 transition px-6 py-6 border p-6 mt-8 bg-white dark:bg-gray-800 rounded-3xl shadow-lg transition-all duration-300 ease-in-out rounded-3xl shadow-lg transition-all duration-300\">\r\n      <div\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        className=\"flex items-center justify-between cursor-pointer mb-4\"\r\n      >\r\n        <h2 className=\"text-xl font-semibold text-blue-500 dark:text-blue-300\">\r\n          ðŸ“Š Scenario Prediction Accuracy Over Time\r\n        </h2>\r\n        {isOpen ? (\r\n          <ChevronDown className=\"w-5 h-5 text-blue-500\" />\r\n        ) : (\r\n          <ChevronRight className=\"w-5 h-5 text-blue-500\" />\r\n        )}\r\n      </div>\r\n\r\n      <div\r\n        className={`transition-all duration-300 ease-in-out overflow-x-auto ${\r\n          isOpen ? 'max-h-[1200px] opacity-100' : 'max-h-0 opacity-0'\r\n        }`}\r\n      >\r\n        {/* Range buttons */}\r\n        <div className=\"flex flex-wrap gap-2 mb-4\">\r\n          {[7, 14, 30, \"all\"].map((d) => (\r\n            <button\r\n              key={d}\r\n              onClick={() => setRange(d)}\r\n              className={`py-1 px-3 text-sm rounded-md font-medium transition-all duration-200 ${\r\n                range === d\r\n                  ? \"bg-blue-600 text-white\"\r\n                  : \"bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 hover:bg-gray-300\"\r\n              }`}\r\n            >\r\n              {d === \"all\" ? \"All\" : `Last ${d} Days`}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Chart area or skeleton */}\r\n        <div className=\"relative w-full max-w-5xl mx-auto h-[50vh] sm:h-[45vh] md:h-[40vh] lg:h-[35vh] xl:h-[30vh] overflow-x-auto transition-all duration-300\">\r\n          {isLoading ? (\r\n            <div className=\"w-full h-full bg-gray-200 dark:bg-gray-700 animate-pulse rounded-md\" />\r\n          ) : (\r\n            <div\r\n              className=\"relative\"\r\n              style={{ minWidth: `${minWidth}px`, height: \"100%\" }}\r\n            >\r\n              <Suspense fallback={<div className=\"w-full h-full bg-gray-200 animate-pulse rounded-md\" />}>\r\n                <Line data={data} options={options} />\r\n              </Suspense>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS<TType, TData, TLabel> | null>(null);\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n"],"names":["ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Filler","Tooltip","Legend","allLabels","allAccuracy","ScenarioAccuracyChart","range","setRange","useState","storedIsOpen","localStorage","getItem","isOpen","setIsOpen","isLoading","setIsLoading","useEffect","t","setTimeout","clearTimeout","setItem","labels","slice","data","datasets","label","fill","backgroundColor","borderColor","pointBackgroundColor","tension","minWidth","length","_jsxs","className","children","onClick","_jsx","ChevronDown","ChevronRight","map","d","style","height","Suspense","fallback","Line","options","responsive","maintainAspectRatio","plugins","legend","position","color","font","size","tooltip","mode","intersect","scales","x","ticks","autoSkip","title","display","text","weight","y","beginAtZero","max","defaultDatasetIdKey","reforwardRef","ref","value","current","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","arguments","addedDatasets","nextDataset","currentDataset","find","dataset","includes","push","Object","assign","cloneData","nextData","getDatasetAtEvent","chart","event","getElementsAtEventForMode","nativeEvent","getElementAtEvent","getElementsAtEvent","ChartComponent","props","width","redraw","type","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","Chart$1","destroyChart","destroy","setOptions","nextOptions","config","update","React","role","Chart","forwardRef","createTypedChart","registerables","LineController","Bar","BarController","Radar","RadarController","Doughnut","DoughnutController","PolarArea","PolarAreaController","Bubble","BubbleController","Pie","PieController","Scatter","ScatterController"],"sourceRoot":""}