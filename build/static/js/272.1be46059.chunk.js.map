{"version":3,"file":"static/js/272.1be46059.chunk.js","mappings":"0MAcAA,EAAAA,GAAQC,SAASC,EAAAA,GAAeC,EAAAA,GAAaC,EAAAA,GAAYC,EAAAA,GAAOC,EAAAA,GAASC,EAAAA,IAEzE,MAAMC,EAAWC,EAAAA,MAAW,IAC1B,6BAA0BC,MAAMC,IAAM,CAAQC,QAASD,EAAOE,UAG1DC,EAAe,CACnB,CAAEC,OAAQ,QAASC,YAAa,GAChC,CAAED,OAAQ,QAASC,YAAa,IAChC,CAAED,OAAQ,QAASC,YAAa,IAChC,CAAED,OAAQ,QAASC,YAAa,KAChC,CAAED,OAAQ,QAASC,YAAa,IAChC,CAAED,OAAQ,QAASC,YAAa,MAGnB,SAASC,IACtB,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,IAEzB,UADHC,aAAaC,QAAQ,iCAI/BC,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,IAEvCK,EAAAA,EAAAA,YAAU,KAER,GADAJ,aAAaK,QAAQ,6BAA8BR,GAC/CA,EAAY,CACdM,GAAW,GACX,MAAMG,EAAIC,YAAW,IAAMJ,GAAW,IAAQ,KAC9C,MAAO,IAAMK,aAAaF,EAC5B,IACC,CAACT,IAEJ,MAcM,KAAEY,EAAI,OAAEC,EAAM,IAAEC,GAdAC,MACpB,MAAMC,EAAapB,EAAaqB,MAAK,CAACC,EAAGC,IAAMA,EAAErB,YAAcoB,EAAEpB,cAC3DsB,EAAaJ,EAAWK,OACxBC,EAAYC,KAAKC,KAAkB,GAAbJ,GACtBK,EAAcF,KAAKC,KAAkB,GAAbJ,GAO9B,MAAO,CAAER,KAJII,EAAWU,MAAM,EAAGJ,GAAWK,QAAO,CAACC,EAAKC,IAASD,EAAMC,EAAK/B,aAAa,GAI3Ee,OAHAG,EAAWU,MAAMJ,EAAWA,EAAYG,GAAaE,QAAO,CAACC,EAAKC,IAASD,EAAMC,EAAK/B,aAAa,GAG3FgB,IAFXE,EAAWU,MAAMJ,EAAYG,GAAaE,QAAO,CAACC,EAAKC,IAASD,EAAMC,EAAK/B,aAAa,GAExE,EAGAiB,GAExBe,EAAY,CAChBC,OAAQ,CAAC,gBAAiB,kBAAmB,gBAC7CC,SAAU,CACR,CACEC,MAAO,oBACPC,KAAM,CAACtB,EAAMC,EAAQC,GACrBqB,gBAAiB,CAAC,UAAW,UAAW,WACxCC,YAAa,CAAC,UAAW,UAAW,WACpCC,YAAa,KAYnB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0GAAyGC,SAAA,EACtHF,EAAAA,EAAAA,MAAA,OACEC,UAAU,wDACVE,QAASA,IAAMxC,GAAeyC,IAAUA,IACxC,gBAAe1C,EAAWwC,SAAA,EAE1BG,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,yDAAwDC,SAAC,uBAGtExC,GACC2C,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACL,UAAU,2CAErBI,EAAAA,EAAAA,KAACE,EAAAA,EAAY,CAACN,UAAU,8CAI5BI,EAAAA,EAAAA,KAAA,OACEJ,UAAW,4DACTvC,EAAa,4BAA8B,qBAC1CwC,SAEFxC,IACC2C,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,6CAA4CC,SACxDnC,GACCsC,EAAAA,EAAAA,KAACG,EAAAA,EAAc,CAACC,OAAO,YAEvBJ,EAAAA,EAAAA,KAACK,EAAAA,SAAQ,CAACC,UAAUN,EAAAA,EAAAA,KAACG,EAAAA,EAAc,CAACC,OAAO,WAAYP,UACrDG,EAAAA,EAAAA,KAACrD,EAAQ,CAAC4C,KAAMJ,EAAWoB,QAnCzB,CACdC,YAAY,EACZC,qBAAqB,EACrBC,QAAS,CAAEC,OAAQ,CAAEC,SAAU,QAC/BC,OAAQ,CAAEC,EAAG,CAAEC,aAAa,eAuChC,C","sources":["components/SimulationByUser.js"],"sourcesContent":["import React, { useState, useEffect, Suspense } from \"react\";\r\nimport { ChevronRight, ChevronUp } from \"lucide-react\";\r\nimport SkeletonLoader from './SkeletonLoader'; // Ensure this component exists and is styled\r\n\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n} from \"chart.js\";\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst BarChart = React.lazy(() =>\r\n  import(\"react-chartjs-2\").then((module) => ({ default: module.Bar }))\r\n);\r\n\r\nconst allUsersData = [\r\n  { userId: \"user1\", simulations: 5 },\r\n  { userId: \"user2\", simulations: 15 },\r\n  { userId: \"user3\", simulations: 50 },\r\n  { userId: \"user4\", simulations: 200 },\r\n  { userId: \"user5\", simulations: 30 },\r\n  { userId: \"user6\", simulations: 120 },\r\n];\r\n\r\nexport default function SimulationByUserChart() {\r\n  const [isExpanded, setIsExpanded] = useState(() => {\r\n    const stored = localStorage.getItem(\"simulationByUserIsExpanded\");\r\n    return stored === \"false\" ? false : true;\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"simulationByUserIsExpanded\", isExpanded);\r\n    if (isExpanded) {\r\n      setLoading(true);\r\n      const t = setTimeout(() => setLoading(false), 3000);\r\n      return () => clearTimeout(t);\r\n    }\r\n  }, [isExpanded]);\r\n\r\n  const aggregateData = () => {\r\n    const sortedData = allUsersData.sort((a, b) => b.simulations - a.simulations);\r\n    const totalUsers = sortedData.length;\r\n    const highCount = Math.ceil(totalUsers * 0.2);\r\n    const mediumCount = Math.ceil(totalUsers * 0.3);\r\n    const lowCount = totalUsers - highCount - mediumCount;\r\n\r\n    const high = sortedData.slice(0, highCount).reduce((sum, user) => sum + user.simulations, 0);\r\n    const medium = sortedData.slice(highCount, highCount + mediumCount).reduce((sum, user) => sum + user.simulations, 0);\r\n    const low = sortedData.slice(highCount + mediumCount).reduce((sum, user) => sum + user.simulations, 0);\r\n\r\n    return { high, medium, low };\r\n  };\r\n\r\n  const { high, medium, low } = aggregateData();\r\n\r\n  const chartData = {\r\n    labels: [\"High Activity\", \"Medium Activity\", \"Low Activity\"],\r\n    datasets: [\r\n      {\r\n        label: \"Total Simulations\",\r\n        data: [high, medium, low],\r\n        backgroundColor: [\"#3b82f6\", \"#34d399\", \"#fbbf24\"],\r\n        borderColor: [\"#2563eb\", \"#10b981\", \"#f59e0b\"],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: { legend: { position: \"top\" } },\r\n    scales: { y: { beginAtZero: true } },\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 mt-8 border p-6 rounded-2xl shadow-md transition-all duration-300 ease-in-out\">\r\n      <div\r\n        className=\"flex justify-between items-center cursor-pointer mb-4\"\r\n        onClick={() => setIsExpanded((prev) => !prev)}\r\n        aria-expanded={isExpanded}\r\n      >\r\n        <h2 className=\"text-xl font-semibold text-blue-500 dark:text-blue-300\">\r\n          Simulation By User\r\n        </h2>\r\n        {isExpanded ? (\r\n          <ChevronUp className=\"w-5 h-5 text-blue-600 dark:text-white\" />\r\n        ) : (\r\n          <ChevronRight className=\"w-5 h-5 text-blue-600 dark:text-white\" />\r\n        )}\r\n      </div>\r\n\r\n      <div\r\n        className={`transition-all duration-300 ease-in-out overflow-hidden ${\r\n          isExpanded ? 'max-h-[800px] opacity-100' : 'max-h-0 opacity-0'\r\n        }`}\r\n      >\r\n        {isExpanded && (\r\n          <div className=\"relative w-full max-w-5xl mx-auto h-[50vh]\">\r\n            {loading ? (\r\n              <SkeletonLoader height=\"h-full\" />\r\n            ) : (\r\n              <Suspense fallback={<SkeletonLoader height=\"h-full\" />}>\r\n                <BarChart data={chartData} options={options} />\r\n              </Suspense>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","BarChart","React","then","module","default","Bar","allUsersData","userId","simulations","SimulationByUserChart","isExpanded","setIsExpanded","useState","localStorage","getItem","loading","setLoading","useEffect","setItem","t","setTimeout","clearTimeout","high","medium","low","aggregateData","sortedData","sort","a","b","totalUsers","length","highCount","Math","ceil","mediumCount","slice","reduce","sum","user","chartData","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","_jsxs","className","children","onClick","prev","_jsx","ChevronUp","ChevronRight","SkeletonLoader","height","Suspense","fallback","options","responsive","maintainAspectRatio","plugins","legend","position","scales","y","beginAtZero"],"sourceRoot":""}